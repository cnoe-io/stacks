apiVersion: generators.external-secrets.io/v1alpha1
kind: Password
metadata:
  name: backstage
  namespace: backstage
spec:
  length: 36
  digits: 5
  symbols: 5
  symbolCharacters: "/-+"
  noUpper: false
  allowRepeat: true
---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: backstage-oidc
  namespace: backstage
spec:
  secretStoreRef:
    name: keycloak
    kind: ClusterSecretStore
  refreshInterval: "0"
  target:
    name: backstage-env-vars
    template:
      engineVersion: v2
      data:
        BACKSTAGE_FRONTEND_URL: https://{{ .Values.networking.host }}:{{ .Values.networking.port }}/backstage
        POSTGRES_HOST: postgresql.backstage.svc.cluster.local
        POSTGRES_PORT: '5432'
        POSTGRES_DB: backstage
        POSTGRES_USER: backstage
        POSTGRES_PASSWORD: "{{.POSTGRES_PASSWORD}}"
        ARGO_WORKFLOWS_URL: https://{{ .Values.networking.host }}:{{ .Values.networking.port }}/argo-workflows
        KEYCLOAK_NAME_METADATA: https://{{ .Values.networking.host }}:{{ .Values.networking.port }}/keycloak/realms/cnoe/.well-known/openid-configuration
        KEYCLOAK_CLIENT_SECRET: "{{.BACKSTAGE_CLIENT_SECRET}}"
        ARGOCD_AUTH_TOKEN: "argocd.token={{.ARGOCD_SESSION_TOKEN}}"
        ARGO_CD_URL: 'https://argocd-server.argocd.svc.cluster.local/api/v1/'
  data:
    - secretKey: ARGOCD_SESSION_TOKEN
      remoteRef:
        key: keycloak-clients
        property: ARGOCD_SESSION_TOKEN
    - secretKey: BACKSTAGE_CLIENT_SECRET
      remoteRef:
        key: keycloak-clients
        property: BACKSTAGE_CLIENT_SECRET
  dataFrom:
    - sourceRef:
        generatorRef:
          apiVersion: generators.external-secrets.io/v1alpha1
          kind: Password
          name: backstage
      rewrite:
        - transform:
            template: "POSTGRES_PASSWORD"
---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: gitea-credentials
  namespace: backstage
spec:
  secretStoreRef:
    name: gitea
    kind: ClusterSecretStore
  refreshInterval: "0"
  target:
    name: gitea-credentials
  data:
    - secretKey: GITEA_USERNAME
      remoteRef:
        key: gitea-credential
        property: username
    - secretKey: GITEA_PASSWORD
      remoteRef:
        key: gitea-credential
        property: password