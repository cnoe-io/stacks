# Override values for idpbuilder local deployment
global:
  enabledSubAgents:
    argocd: true
    aws: false
    backstage: true
    confluence: false
    github: true
    jira: false
    komodor: false
    pagerduty: false
    slack: false
    splunk: false
    weather: false
    webex: false
    kb-rag: false

  slim:
    enabled: false

  externalSecrets:
    enabled: true
    secretStoreRef:
      name: "vault-secret-store"
      kind: ClusterSecretStore

  agentSecrets:
    create: true

  llmSecrets:
    create: false # do not create llm secret in subcharts (use global or existing llm secret)
    secretName: "llm-secret"
    externalSecrets:
      data:
      - secretKey: LLM_PROVIDER
        remoteRef:
          conversionStrategy: Default
          decodingStrategy: None
          key: ai-platform-engineering/global
          property: LLM_PROVIDER

      # Azure OpenAI configuration
      - secretKey: AZURE_OPENAI_API_KEY
        remoteRef:
          conversionStrategy: Default
          decodingStrategy: None
          key: ai-platform-engineering/global
          property: AZURE_OPENAI_API_KEY
      - secretKey: AZURE_OPENAI_ENDPOINT
        remoteRef:
          conversionStrategy: Default
          decodingStrategy: None
          key: ai-platform-engineering/global
          property: AZURE_OPENAI_ENDPOINT
      - secretKey: AZURE_OPENAI_API_VERSION
        remoteRef:
          conversionStrategy: Default
          decodingStrategy: None
          key: ai-platform-engineering/global
          property: AZURE_OPENAI_API_VERSION
      - secretKey: AZURE_OPENAI_DEPLOYMENT
        remoteRef:
          conversionStrategy: Default
          decodingStrategy: None
          key: ai-platform-engineering/global
          property: AZURE_OPENAI_DEPLOYMENT
      # OpenAI configuration
      - secretKey: OPENAI_API_KEY
        remoteRef:
          conversionStrategy: Default
          decodingStrategy: None
          key: ai-platform-engineering/global
          property: OPENAI_API_KEY
      - secretKey: OPENAI_ENDPOINT
        remoteRef:
          conversionStrategy: Default
          decodingStrategy: None
          key: ai-platform-engineering/global
          property: OPENAI_ENDPOINT
      - secretKey: OPENAI_MODEL_NAME
        remoteRef:
          conversionStrategy: Default
          decodingStrategy: None
          key: ai-platform-engineering/global
          property: OPENAI_MODEL_NAME
      # AWS Bedrock configuration
      - secretKey: AWS_ACCESS_KEY_ID
        remoteRef:
          conversionStrategy: Default
          decodingStrategy: None
          key: ai-platform-engineering/global
          property: AWS_ACCESS_KEY_ID
      - secretKey: AWS_SECRET_ACCESS_KEY
        remoteRef:
          conversionStrategy: Default
          decodingStrategy: None
          key: ai-platform-engineering/global
          property: AWS_SECRET_ACCESS_KEY
      - secretKey: AWS_REGION
        remoteRef:
          conversionStrategy: Default
          decodingStrategy: None
          key: ai-platform-engineering/global
          property: AWS_REGION
      - secretKey: AWS_BEDROCK_MODEL_ID
        remoteRef:
          conversionStrategy: Default
          decodingStrategy: None
          key: ai-platform-engineering/global
          property: AWS_BEDROCK_MODEL_ID
      - secretKey: AWS_BEDROCK_PROVIDER
        remoteRef:
          conversionStrategy: Default
          decodingStrategy: None
          key: ai-platform-engineering/global
          property: AWS_BEDROCK_PROVIDER
      - secretKey: GOOGLE_API_KEY
        remoteRef:
          conversionStrategy: Default
          decodingStrategy: None
          key: ai-platform-engineering/global
          property: GOOGLE_API_KEY
      - secretKey: GOOGLE_MODEL_NAME
        remoteRef:
          conversionStrategy: Default
          decodingStrategy: None
          key: ai-platform-engineering/global
          property: GOOGLE_MODEL_NAME
      - secretKey: GCP_PROJECT_ID
        remoteRef:
          conversionStrategy: Default
          decodingStrategy: None
          key: ai-platform-engineering/global
          property: GCP_PROJECT_ID
      - secretKey: GCP_LOCATION
        remoteRef:
          conversionStrategy: Default
          decodingStrategy: None
          key: ai-platform-engineering/global
          property: GCP_LOCATION
      - secretKey: GCP_MODEL_NAME
        remoteRef:
          conversionStrategy: Default
          decodingStrategy: None
          key: ai-platform-engineering/global
          property: GCP_MODEL_NAME

supervisor-agent:
  nameOverride: "supervisor-agent"
  env:
    EXTERNAL_URL: "https://cnoe.localtest.me:8443/ai-platform-engineering"
    SKIP_AGENT_CONNECTIVITY_CHECK: "false"
    AGENT_CONNECTIVITY_ENABLE_BACKGROUND: "true"

agent-argocd:
  nameOverride: "agent-argocd"
  agentSecrets:
    secretName: "agent-argocd-secret"
    externalSecrets:
      data:
      - secretKey: ARGOCD_TOKEN
        remoteRef:
          key: secret/ai-platform-engineering/argocd-secret
          property: ARGOCD_TOKEN
      - secretKey: ARGOCD_API_URL
        remoteRef:
          key: secret/ai-platform-engineering/argocd-secret
          property: ARGOCD_API_URL
      - secretKey: ARGOCD_VERIFY_SSL
        remoteRef:
          key: secret/ai-platform-engineering/argocd-secret
          property: ARGOCD_VERIFY_SSL

agent-backstage:
  nameOverride: "agent-backstage"
  agentSecrets:
    secretName: "agent-backstage-secret"
    externalSecrets:
      data:
      - secretKey: BACKSTAGE_API_TOKEN
        remoteRef:
          key: secret/ai-platform-engineering/backstage-secret
          property: BACKSTAGE_API_TOKEN
      - secretKey: BACKSTAGE_URL
        remoteRef:
          key: secret/ai-platform-engineering/backstage-secret
          property: BACKSTAGE_URL


agent-github:
  nameOverride: "agent-github"
  agentSecrets:
    secretName: "agent-github-secret"
    externalSecrets:
      data:
      - secretKey: GITHUB_PERSONAL_ACCESS_TOKEN
        remoteRef:
          key: secret/ai-platform-engineering/github-secret
          property: GITHUB_PERSONAL_ACCESS_TOKEN

graphrag:
  enabled: true

# neo4j configuration for kind cluster
neo4j:
  volumes:
    data:
      mode: "dynamic"
      dynamic:
        storageClassName: standard
        requests:
          storage: 1Gi

# KB-RAG Stack with 1Gi storage for kind
kb-rag-stack:
  enabled: false  # Disabled for kind cluster

# Milvus with 1Gi storage for kind
milvus:
  enabled: false  # Disabled for kind cluster
